###
# vkucukcakar/nginx
# NGINX Docker image with automatic configuration file creation and export
# Copyright (c) 2017 Volkan Kucukcakar
#
# This file is part of vkucukcakar/nginx.
#
# vkucukcakar/nginx is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# vkucukcakar/nginx is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# This copyright notice and license must be retained in all files and derivative works.
###

###
# Container     : ${CONTAINER_NAME}
# Symbolic link : /etc/nginx/conf.d/nginx-default.conf
# Description   : Upstream server Nginx server block configuration file. Edit according to your needs.
# Note          : This file is automatically created by vkucukcakar/nginx image
###


##
# Server block
##

server {

	##
	# Get real IP from reverse proxy
	##

	#set_real_ip_from 127.0.0.1/8;		# Private IP range. Reserved for later use.
	#set_real_ip_from 10.0.0.0/8;		# Private IP range. Reserved for later use.
	set_real_ip_from 172.16.0.0/12;		# Private IP range. Reserved for later use.
	#set_real_ip_from 192.168.0.0/16;	# Private IP range. Reserved for later use.
	#set_real_ip_from fd00::/8;			# Private IP range. Reserved for later use.

	real_ip_header Docker-X-Real-IP;	# Defines the request header field whose value will be used to replace the client address. (default=X-Real-IP)
	real_ip_recursive off;				# If recursive search is disabled, the original client address that matches one of the trusted addresses is replaced by the last address sent in the request header field defined by the real_ip_header directive. (default=off)


	##
	# Deny directory listing
	##

	autoindex  off;	# Enables or disables the directory listing output. (default=off)


	##
	# Mime type, charset
	##

	default_type application/octet-stream;	# Defines the default MIME type of a response. (default=text/plain) (Docker default=application/octet-stream)
	#charset UTF-8;							# Adds the specified charset to the “Content-Type” response header field. If this charset is different from the charset specified in the source_charset directive, a conversion is performed. (default=off)

	
	##
	# TESTING. Deny all but localhost. 
	# For testing from outside; 
	#   - Uncomment the following block,
	#   - Allow only your Docker proxy containers's default gateway. e.g: allow 172.23.0.1;
	#   - If you are not using docker on current local machine, test using a ssh tunnel created from your local machine to Docker host machine
	##

	#allow 127.0.0.1/32;
	#allow 172.23.0.1;
	#deny all;	# Must be the last line!

	##
	# Basic HTTP Authentication
	# You should put the .htpasswd file to a location outside of server root in container (e.g: /configurations/.htpasswd)
	##

	#auth_basic "Restricted";
	#auth_basic_user_file /configurations/.htpasswd;

	##
	# Only allow GET, HEAD and POST methods, do not accept DELETE, SEARCH and other methods
	##

	if ($request_method !~ ^(GET|HEAD|POST)$ ) {
		return 444;	# Make nginx close connection without response
	}

	##
	# Deny certain user-agents (Example/Optional)
	##

	#if ( $http_user_agent ~* (LWP::Simple|wget) ) {
	#    return 403;
	#}

	##
	# Block referral spam (Example/Optional)
	##

	#if ( $http_referer ~* (poker|porn|sex|teen) ) {
	#    #return 444;	# Make nginx close connection without response
	#    return 403;
	#}

	
	##
	# Server settings
	##

	listen 80; 						# Upstream server only listens on port 80 as plain http
	server_name .${DOMAIN_NAME};	# A wildcard name in the form ".example.com" will match both "example.com" and "*.example.com"

	index index.php index.html index.htm;
	access_log /var/log/nginx/access.log docker_combined;
	error_log /var/log/nginx/error.log;

	root /var/www/html;

	##
	# Add trailing slash using regex (Example/Optional). Add trailing slash to */wp-admin requests
	##

	#rewrite /wp-admin$ $scheme://$host$uri/ permanent;

	##
	# Redirect using regex (Example/Optional). Redirect /admin and /admin/ to /wp-admin
	##

	#rewrite ^/admin/?$ $scheme://$host/wp-admin/ permanent;

	##
	# Redirect using regex for some permalinks (Example/Optional). Redirect some permanent pages (project pages, portfolio etc...)
	##

	#rewrite ^/foo1/?$ $scheme://$host/foobar1/ redirect;
	#rewrite ^/foo2/?$ $scheme://$host/foobar2/ redirect;

	# Minify rewrite (Example/Optional)
	#rewrite ^/min/([bfg]=.*)$ /min/?$1 last;

	##
	# Fastcgi no-cache. Prepare no-cache directives for some conditions. (*Note: "If" inside location is still evil*)
	##
	
	## Cache by default
	#set $no_cache 0;
	#
	## Do not cache if query string is not empty
	#if ($query_string != "") {
	#	set $no_cache 1;
	#}	
	#
	#### Note: You should write your own application's $no_cache conditions for authenticated users and various URLs. Please see the Wordpress examples below.	
	#
	## Wordpress - Do not cache logged in users and comment authors
	#if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
	#	set $no_cache 1;
	#}
	#
	## Wordpress - Do not cache some URLs
	#if ($request_uri ~* "(/wp-admin/|/xmlrpc.php|wp-.*.php|/feed/|sitemap.*.xml)") {
	#	set $no_cache 1;
	#}	
	
	##
	# Default location for generic PHP or Wordpress installation. This order might seem weird - this is attempted to match last if rules below fail.
	##

	location / {
		
		try_files $uri $uri/ /index.php?$args;
				
	} # location

	
 	##
	# Location for subdirectory Wordpress installation
	##

	#location /wordpress {
	#    try_files $uri $uri/ /wordpress/index.php?$args;
	#}


	##
	# Deny access to some files and directories
	##

	# Deny access to sql backup files
	location ~* \.(sql|sql.gz)$ {
		deny all;
	}

	# Deny access to .htaccess files
	location ~ /\.ht {
		deny all;
	}

	# Deny access to hidden files
	location ~ /\. {
		deny all;
	}

	# Deny access to any files with a .php extension in the uploads directory
	location ~* /(?:uploads|upload)/.*\.php$ {
		deny all;
	}

	# Deny access to some wordpress directories
	location ~* ^(/wp-content/uploads/backwpup|/wp-content/uploads/iw-backup|/wp-content/uploads/example) {
		#deny all;
		return 404;
	}

	# Deny access to some wordpress files
	location ~* ^(/readme.html|/readme.txt|/license.txt|/wp-config.php)$ {
		deny all;
	}

	##
	# Meta files
	##

	# favicon.ico
	location = /favicon.ico {
		access_log off;		# Disable access logging
		log_not_found off;	# Disable logging of errors about not found files
	}

	# robots.txt
	location = /robots.txt {
		access_log off;		# Disable access logging
		log_not_found off;	# Disable logging of errors about not found files
	}


	##
	# Disable logging for some static file types (images, scripts, fonts etc...) (Example/Optional)
	##

	#location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|svgz|eot|otf|woff)$ {
	#	#expires 24h;		# Add/modify "Expires" and "Cache-Control" response header fields to 24h
	#	access_log off;		# Disable access logging
	#	log_not_found off;	# Disable logging of errors about not found files
	#}

 	##
	# Limit access to /wp-admin folder and /wp-login.php file. Satisfy from a known IP or basic HTTP authentication
	# Exclude admin-ajax.php
	# Limit requests per second for /wp-login.php
	##
	
	##location ~* ^/(wp-admin/.+\.php|wp-login\.php)$ {
	#location ~* ^/wp-admin/.+\.php$ {
	#	satisfy any;	
	#	allow 127.0.0.1;
	#	deny all;
	#	auth_basic "Restricted";
	#	auth_basic_user_file /configurations/.htpasswd;
	#	include	/configurations/nginx-php.conf;
	#}
	#
	#location ~* ^/wp-admin {
	#	satisfy any;	
	#	allow 127.0.0.1;
	#	deny all;
	#	auth_basic "Restricted";
	#	auth_basic_user_file /configurations/.htpasswd;
	#}
	#
	#location = /wp-admin/admin-ajax.php {
	#	include	/configurations/nginx-php.conf;
	#}
	#
	#location = /wp-login.php {
	#	# Adjust burst according to your needs
	#	limit_req zone=adminlogin burst=10 nodelay;
	#	satisfy any;	
	#	allow 127.0.0.1;
	#	deny all;
	#	auth_basic "Restricted";
	#	auth_basic_user_file /configurations/.htpasswd;
	#	include	/configurations/nginx-php.conf;
	#}

	
	##
	# PHP, php-fpm
	##

	# PHP location for generic PHP or Wordpress installation (See also: http://codex.wordpress.org/Nginx )

	location ~ \.php$ {
		include	/configurations/nginx-php.conf;
	} # location

} # server



##
# NOTE: if !
#
#       "if" inside "location" is really evil !!! #http://wiki.nginx.org/IfIsEvil
##


##
# NOTE: request processing order
#
#       nginx first searches for the most specific prefix location given by literal
#       strings regardless of the listed order. In the configuration above the only
#       prefix location is “/” and since it matches any request it will be used as a
#       last resort. Then nginx checks locations given by regular expression in the
#       order listed in the configuration file. The first matching expression stops
#       the search and nginx will use this location. If no regular expression matches
#       a request, then nginx uses the most specific prefix location found earlier.
#       http://nginx.org/en/docs/http/request_processing.html
##
