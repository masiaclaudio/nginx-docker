###
# vkucukcakar/nginx
# NGINX Docker image with automatic configuration file creation and export
# Copyright (c) 2017 Volkan Kucukcakar
#
# This file is part of vkucukcakar/nginx.
#
# vkucukcakar/nginx is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# vkucukcakar/nginx is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# This copyright notice and license must be retained in all files and derivative works.
####

###
# Container     : ${CONTAINER_NAME}
# Symbolic link : /etc/nginx/nginx.conf
# Description   : Upstream server Nginx configuration file. Edit according to your needs.
# Note          : This file is automatically created by vkucukcakar/nginx image
###


##
# Root block - Derived from official Docker nginx image.
##

user  nginx;
worker_processes  1;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


##
# Root block - Extra (See http://nginx.org/en/docs/ngx_core_module.html )
##

worker_rlimit_nofile 5000;	# Changes the limit on the maximum number of open files (RLIMIT_NOFILE) for worker processes. (default=)


##
# Events block (See http://nginx.org/en/docs/ngx_core_module.html )
##

events {
	worker_connections  1024;	# Sets the maximum number of simultaneous connections that can be opened by a worker process. (default=512) (Docker default=1024)
	#multi_accept on;			# If multi_accept is disabled, a worker process will accept one new connection at a time. Otherwise, a worker process will accept all new connections at a time. (default=off)
	#use epoll;					# Specifies the connection processing method to use. (default=)
	#accept_mutex off;			# If accept_mutex is enabled, worker processes will accept new connections by turn. (default=off)
}


##
# Http block
##

http {
	include       /etc/nginx/mime.types;	# Derived from official Docker nginx image.
	default_type  application/octet-stream;	# Defines the default MIME type of a response. (default=text/plain) (Docker default=application/octet-stream)


	##
	# Log settings
	##

	# Default log format of official Docker nginx image. Reserved.
	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
				      '$status $body_bytes_sent "$http_referer" '
				      '"$http_user_agent" "$http_x_forwarded_for"';

	# Combined log format for Docker to log both http, https access and other details
	log_format  docker_combined	'$remote_addr - $remote_user [$time_local] '
							'$scheme/$ssl_protocol/$ssl_cipher '
							'"$host" "$request" $status $body_bytes_sent "$http_referer" '
							'"$http_user_agent" "$http_x_forwarded_for"';

	# Default logging mechanism of official Docker nginx image which sends logs back to Docker.
	access_log  /var/log/nginx/access.log	docker_combined;

	##
	# Connection settings (See http://nginx.org/en/docs/http/ngx_http_core_module.html )
	##

	sendfile on;					# Enables or disables the use of sendfile(). (default=off) (Docker default=on)
	#tcp_nopush on;					# Enables or disables the use of the TCP_NOPUSH socket option on FreeBSD or the TCP_CORK socket option on Linux. (default=off)
	#tcp_nodelay on;				# Enables or disables the use of the TCP_NODELAY option. The option is enabled only when a connection is transitioned into the keep-alive state. (default=on)
	#keepalive_timeout 65s;			# The first parameter sets a timeout during which a keep-alive client connection will stay open on the server side. timeout [header_timeout], the optional second parameter sets "Keep-Alive: timeout=time" response header. e.g.: 60 60. (default=75s)
	#client_header_timeout 20s;		# Defines a timeout for reading client request header. (default=60s)
	#client_body_timeout 20s;		# Defines a timeout for reading client request body. (default=60s)
	#reset_timedout_connection on;	# Enables or disables resetting timed out connections. (default=off)
	#send_timeout 20s;				# Sets a timeout for transmitting a response to the client. (default=60s)

	##
	# Hide Nginx version. Required both in proxy and upstream configurations. Verify with "curl -I http://localhost/ | grep Server"
	##

	server_tokens off;	# Enables or disables emitting nginx version on error pages and in the “Server” response header field. (default=on)

	##
	# Buffer settings (See http://nginx.org/en/docs/http/ngx_http_core_module.html )
	##

	#client_body_buffer_size  16k;		# Sets buffer size for reading client request body. In case the request body is larger than the buffer, the whole body or only its part is written to a temporary file. By default, buffer size is equal to two memory pages. (default=16k)
	#client_header_buffer_size 1k;		# Sets buffer size for reading client request header. (default=1k)
	#large_client_header_buffers 4 8k;	# Sets the maximum number and size of buffers used for reading large client request header. (default=4 8k)

	# Increase maximum file upload size. This setting is present in both proxy and upstream configuration file templates
	client_max_body_size 16m;			# Sets the maximum allowed size of the client request body, specified in the “Content-Length” request header field. (default=1m)

 	##
	# Open file cache. (Cache metadata of files) (See http://nginx.org/en/docs/http/ngx_http_core_module.html )
	##

	#open_file_cache max=100000 inactive=20s;	# Configures a cache that can store:  open file descriptors, their sizes and modification times;  information on existence of directories;  file lookup errors, such as “file not found”, “no read permission”, and so on. (default=off)
	#open_file_cache_valid 30s;					# Sets a time after which open_file_cache elements should be validated. (default=60s)
	#open_file_cache_min_uses 1;				# Sets the minimum number of file accesses during the period configured by the inactive parameter of the open_file_cache directive, required for a file descriptor to remain open in the cache. (default=1)
	#open_file_cache_errors off;				# Enables or disables caching of file lookup errors by open_file_cache. (default=off)


 	##
	# Miscellaneous settings
	##

	etag on;					# Enables or disables automatic generation of the “ETag” response header field for static resources. (default=on)
	#types_hash_max_size 1024;	# Sets the maximum size of the types hash tables. (default=1024)
	#types_hash_bucket_size 64;	# Sets the bucket size for the types hash tables. (default=64)


	##
	# gzip settings - upstream (See also gzip settings - proxy) (See http://nginx.org/en/docs/http/ngx_http_gzip_module.html )
	##

	#gzip on;				# Enables or disables gzipping of responses. (default=off)
	#gzip_static on;		# Enables (“on”) or disables (“off”) checking the existence of precompressed files. (default=off)
	#gzip_disable "";		# Disables gzipping of responses for requests with “User-Agent” header fields matching any of the specified regular expressions. (default=)
	#gzip_proxied any;		# Enables or disables gzipping of responses for proxied requests depending on the request and response. (default=off)
	#gzip_vary on;			# Enables or disables inserting the “Vary: Accept-Encoding” response header field if the directives gzip, gzip_static, or gunzip are active. (default=off) (Tell the intermediate caches to store a separate cache entry for each "Accept-Encoding")
	#gzip_min_length 1400;	# Sets the minimum length of a response that will be gzipped. (default=20) (Should be less than TCP MTU 1420 - minimum TCP header size 20, as it already fits into a single packet)
	#gzip_comp_level 1;		# Sets a gzip compression level of a response. Acceptable values are in the range from 1 to 9. (default=1)
	#gzip_buffers 16 8k;	# Sets the number and size of buffers used to compress a response. (default=16 8k)
	#gzip_http_version 1.1;	# Sets the minimum HTTP version of a request required to compress a response. (default=1.1)
	#gzip_types text/plain text/css application/json application/x-javascript application/javascript text/xml application/xml application/xml+rss image/svg+xml text/javascript text/x-js text/richtext text/xsd text/xsl image/x-icon text/x-component;	# Enables gzipping of responses for the specified MIME types in addition to “text/html”. Responses with the “text/html” type are always compressed. (default=text/html)	

	##
	# Fastcgi cache. Cache zone parameters (See http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_path )
	##
	
	#fastcgi_cache_path /data/nginx/cache levels=1:2 keys_zone=fastcgi_cache_zone:5m max_size=1g inactive=10m use_temp_path=off;	# Sets the path and other parameters of a cache. (keys_zone: a 10MB key zone can store data for about 80,000 keys. max_size: self explanatory. inactive: cache timeout. See the link above for other parameters.)
	
	##
	# Protect admin login scripts. Limit requests per second for a particular IP.
	##
	
	# Adjust rate according to your needs
	limit_req_zone $binary_remote_addr zone=adminlogin:5m rate=10r/m;	# Sets parameters for a shared memory zone that will keep states for various keys. (default=)

	##
	# Include other configurations
	##

	include /etc/nginx/conf.d/*.conf;

}





